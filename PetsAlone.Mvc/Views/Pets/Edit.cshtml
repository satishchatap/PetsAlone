@model PetsAlone.Mvc.Models.PetViewModel

@{
    ViewData["Title"] = "Edit";
    var title =Model.Id != Guid.Empty ? "Edit" : "Create";
}

<h1>@title</h1>

<h4>Pet</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data" asp-action="@title">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PetType" class="control-label"></label>
                @Html.DropDownListFor(m => m.PetType, Model.PetTypes, "Select-Type", new { @class = "form-control" })
                <span asp-validation-for="PetType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MissingSince" class="control-label"></label>
                <input asp-for="MissingSince" class="form-control" />
                <span asp-validation-for="MissingSince" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Photo" class="control-label"></label>
                <input asp-for="Photo" type="file">
                <span asp-validation-for="Photo" class="text-danger"></span>
            </div>
            @Html.HiddenFor(m => m.Id)
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
